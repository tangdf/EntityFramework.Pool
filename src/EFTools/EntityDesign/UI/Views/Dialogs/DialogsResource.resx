<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CancelButton_Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="NewAssociationDialog_AssociationNameLabel" xml:space="preserve">
    <value>&amp;Association Name:</value>
  </data>
  <data name="NewAssociationDialog_EndLabel" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="NewAssociationDialog_EnsureUniqueNameMsg" xml:space="preserve">
    <value>Verify that the Association name is unique.</value>
  </data>
  <data name="NewAssociationDialog_EnsureUniquePropertyNameMsg" xml:space="preserve">
    <value>Verify that the NavigationProperty name is unique.</value>
  </data>
  <data name="NewAssociationDialog_Entity1AccessibleName" xml:space="preserve">
    <value>Entity 1</value>
  </data>
  <data name="NewAssociationDialog_Entity2AccessibleName" xml:space="preserve">
    <value>Entity 2</value>
  </data>
  <data name="NewAssociationDialog_EntityLabel" xml:space="preserve">
    <value>&amp;Entity:</value>
  </data>
  <data name="NewAssociationDialog_ExplanationBoxAccessibleName" xml:space="preserve">
    <value>Explanation box</value>
  </data>
  <data name="NewAssociationDialog_ExplanationText1" xml:space="preserve">
    <value>{0} can have {1} instance of {2}. Use {0}.{3} to access the {2} instance.</value>
    <comment>Example:
[Order] can have [1 (One)] instance of [Customer]. Use [Order].[Customer] to access the [Customer] instance.</comment>
  </data>
  <data name="NewAssociationDialog_ExplanationText2" xml:space="preserve">
    <value>{0} can have {1} instances of {2}. Use {0}.{3} to access the {2} instances.</value>
    <comment>Example:
[Customer] can have [* (Many)] instances of [Order]. Use [Customer].[Orders] to access the [Order] instances.</comment>
  </data>
  <data name="NewAssociationDialog_InvalidAssociationNameMsg" xml:space="preserve">
    <value>The Association name is not valid.</value>
  </data>
  <data name="NewAssociationDialog_InvalidNavigationPropertyNameMsg" xml:space="preserve">
    <value>The NavigationProperty name is not valid.</value>
  </data>
  <data name="NewAssociationDialog_Multiplicity1AccessibleName" xml:space="preserve">
    <value>Multiplicity 1</value>
  </data>
  <data name="NewAssociationDialog_Multiplicity2AccessibleName" xml:space="preserve">
    <value>Multiplicity 2</value>
  </data>
  <data name="NewAssociationDialog_MultiplicityLabel" xml:space="preserve">
    <value>&amp;Multiplicity:</value>
  </data>
  <data name="NewAssociationDialog_NavigationProperty1AccessibleName" xml:space="preserve">
    <value>Navigation Property 1</value>
  </data>
  <data name="NewAssociationDialog_NavigationProperty2AccessibleName" xml:space="preserve">
    <value>Navigation Property 2</value>
  </data>
  <data name="NewAssociationDialog_NavigationPropertyLabel" xml:space="preserve">
    <value>&amp;Navigation Property:</value>
  </data>
  <data name="NewAssociationDialog_Title" xml:space="preserve">
    <value>Add Association</value>
  </data>
  <data name="NewEntityDialog_BaseTypeLabel" xml:space="preserve">
    <value>&amp;Base type:</value>
  </data>
  <data name="NewEntityDialog_CreateKeyLabel" xml:space="preserve">
    <value>&amp;Create key property</value>
  </data>
  <data name="NewEntityDialog_EnsureUniqueNameMsg" xml:space="preserve">
    <value>Verify that the EntityType name is unique.</value>
  </data>
  <data name="NewEntityDialog_EnsureUniqueSetNameMsg" xml:space="preserve">
    <value>Verify that the EntitySet name is unique.</value>
  </data>
  <data name="NewEntityDialog_EntityNameLabel" xml:space="preserve">
    <value>&amp;Entity name:</value>
  </data>
  <data name="NewEntityDialog_EntitySetLabel" xml:space="preserve">
    <value>Entity &amp;Set:</value>
  </data>
  <data name="NewEntityDialog_InvalidEntityNameMsg" xml:space="preserve">
    <value>The EntityType name is not valid.</value>
  </data>
  <data name="NewEntityDialog_InvalidEntitySetMsg" xml:space="preserve">
    <value>The EntitySet name is not valid.</value>
  </data>
  <data name="NewEntityDialog_InvalidKeyPropertyNameMsg" xml:space="preserve">
    <value>The Key Property name is not valid.</value>
  </data>
  <data name="NewEntityDialog_KeyPropertyLabel" xml:space="preserve">
    <value>Key Property</value>
  </data>
  <data name="NewEntityDialog_PropertiesLabel" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="NewEntityDialog_PropertyNameLabel" xml:space="preserve">
    <value>Property &amp;name:</value>
  </data>
  <data name="NewEntityDialog_PropertyTypeLabel" xml:space="preserve">
    <value>Property &amp;type:</value>
  </data>
  <data name="NewEntityDialog_Title" xml:space="preserve">
    <value>Add Entity</value>
  </data>
  <data name="NewFunctionImportDialog_ComplexTypeReturnAccessibleName" xml:space="preserve">
    <value>Complex Types</value>
  </data>
  <data name="NewFunctionImportDialog_ComplexTypeReturnLabel" xml:space="preserve">
    <value>&amp;Complex:</value>
  </data>
  <data name="NewFunctionImportDialog_EmptyReturnTypeLabel" xml:space="preserve">
    <value>&amp;None</value>
  </data>
  <data name="NewFunctionImportDialog_EnsureUniqueNameMsg" xml:space="preserve">
    <value>Verify that the FunctionImport name is unique.</value>
  </data>
  <data name="NewFunctionImportDialog_EntityTypeReturnAccessibleName" xml:space="preserve">
    <value>Entities Type</value>
  </data>
  <data name="NewFunctionImportDialog_EntityTypeReturnLabel" xml:space="preserve">
    <value>&amp;Entities:</value>
  </data>
  <data name="NewFunctionImportDialog_FunctionImportLabel" xml:space="preserve">
    <value>&amp;Function Import Name:</value>
  </data>
  <data name="NewFunctionImportDialog_InvalidFunctionImportNameMsg" xml:space="preserve">
    <value>The Function Import name is not valid.</value>
  </data>
  <data name="NewFunctionImportDialog_ReturnTypeLabel" xml:space="preserve">
    <value>Return Type:</value>
  </data>
  <data name="NewFunctionImportDialog_ScalarsTypeReturnAccessibleName" xml:space="preserve">
    <value>Scalars</value>
  </data>
  <data name="NewFunctionImportDialog_ScalarsTypeReturnLabel" xml:space="preserve">
    <value>&amp;Scalars:</value>
  </data>
  <data name="NewFunctionImportDialog_StoredProcNameLabel" xml:space="preserve">
    <value>Stored &amp;Procedure Name:</value>
  </data>
  <data name="NewFunctionImportDialog_Title" xml:space="preserve">
    <value>Add Function Import</value>
  </data>
  <data name="NewInheritanceDialog_InfoText" xml:space="preserve">
    <value>Select the base and derived entities to create a new inheritance relationship.</value>
  </data>
  <data name="NewInheritanceDialog_SelectBaseEntity" xml:space="preserve">
    <value>Select a &amp;base entity:</value>
  </data>
  <data name="NewInheritanceDialog_SelectDerivedEntity" xml:space="preserve">
    <value>Select a &amp;derived entity:</value>
  </data>
  <data name="NewInheritanceDialog_Title" xml:space="preserve">
    <value>Add Inheritance</value>
  </data>
  <data name="OKButton_Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="SameEntityAndPropertyNameMsg" xml:space="preserve">
    <value>The property name cannot be the same as the entity name.</value>
  </data>
  <data name="DeleteButton_Text" xml:space="preserve">
    <value>&amp;Delete</value>
  </data>
  <data name="RefConstraintDialog_DependentKeyHeader" xml:space="preserve">
    <value>Dependent Key</value>
  </data>
  <data name="RefConstraintDialog_DependentLabel" xml:space="preserve">
    <value>Dependent:</value>
  </data>
  <data name="RefConstraintDialog_PrincipalKeyHeader" xml:space="preserve">
    <value>Principal Key</value>
  </data>
  <data name="RefConstraintDialog_PrincipalLabel" xml:space="preserve">
    <value>&amp;Principal:</value>
  </data>
  <data name="RefConstraintDialog_Title" xml:space="preserve">
    <value>Referential Constraint</value>
  </data>
  <data name="ComplexTypePickerDialog_Title" xml:space="preserve">
    <value>Add Complex Property</value>
  </data>
  <data name="RefConstraintDialog_DependentKeyHeader_SupportFKs" xml:space="preserve">
    <value>Dependent Property</value>
  </data>
  <data name="NewFunctionImportDialog_CannotInferReturnTypeShapeMsg" xml:space="preserve">
    <value>The Return Type shape cannot be inferred.</value>
  </data>
  <data name="NewFunctionImportDialog_ClickToExecute" xml:space="preserve">
    <value>Detect Return Type Shape</value>
  </data>
  <data name="NewFunctionImportDialog_Executing" xml:space="preserve">
    <value>Detecting Return Type...</value>
  </data>
  <data name="NewFunctionImportDialog_NoConnectionMsg" xml:space="preserve">
    <value>A database connection could not be found for this model.</value>
  </data>
  <data name="NewFunctionImportDialog_SelectStoredProcedure" xml:space="preserve">
    <value>Select a Stored Procedure to enable return type shape detection.</value>
  </data>
  <data name="NewFunctionImportDialog_AddFunctionImportTitle" xml:space="preserve">
    <value>Add Function Import</value>
  </data>
  <data name="NewFunctionImportDialog_EditFunctionImportTitle" xml:space="preserve">
    <value>Edit Function Import</value>
  </data>
  <data name="NewAssociationDialog_ExplanationText1EmptyNavProp" xml:space="preserve">
    <value>{0} can have {1} instance of {2}.</value>
    <comment>Example:
[Order] can have [1 (One)] instance of [Customer].</comment>
  </data>
  <data name="NewAssociationDialog_ExplanationText2EmptyNavProp" xml:space="preserve">
    <value>{0} can have {1} instances of {2}.</value>
    <comment>Example:
[Customer] can have [* (Many)] instances of [Order].</comment>
  </data>
  <data name="CancelButton_AccessibleName" xml:space="preserve">
    <value>Cancel Button</value>
  </data>
  <data name="DeleteStorageEntitySetsDescription" xml:space="preserve">
    <value>The following tables and views in the store model will no longer be mapped.  Do you want them deleted?</value>
  </data>
  <data name="NoButton_AccessibleName" xml:space="preserve">
    <value>No Button</value>
  </data>
  <data name="NoButton_Text" xml:space="preserve">
    <value>&amp;No</value>
  </data>
  <data name="YesButton_AccessibleName" xml:space="preserve">
    <value>Yes Button</value>
  </data>
  <data name="YesButton_Text" xml:space="preserve">
    <value>&amp;Yes</value>
  </data>
  <data name="DeleteStorageEntitySetsListBox_AccessibleName" xml:space="preserve">
    <value>List of Storage Entity Sets</value>
  </data>
  <data name="DeleteStorageEntitySetsDialogTitle" xml:space="preserve">
    <value>Delete Unmapped Tables and Views</value>
  </data>
  <data name="RefConstraintDialog_DependentPropMappedMultipleTimes" xml:space="preserve">
    <value>The following list of dependent key properties ({0}) are each mapped to more than one principal key property. Please ensure there is a maximum of one mapping for each dependent key property.</value>
  </data>
  <data name="ComplexTypePickerDialog_Prompt" xml:space="preserve">
    <value>Select a complex type:</value>
  </data>
  <data name="OKButton_AccessibleName" xml:space="preserve">
    <value>OK Button</value>
  </data>
  <data name="NewFunctionImportDialog_NotValidComplexTypeName" xml:space="preserve">
    <value>The value '{0}' is not a valid name for a complex type.</value>
  </data>
  <data name="NewFunctionImportDialog_GetColumnInfoException" xml:space="preserve">
    <value>An exception of type "{0}" occurred while attempting to get columns information.
The exception message is:
{1}</value>
  </data>
  <data name="NewFunctionImportDialog_NoColumnsReturned" xml:space="preserve">
    <value>The selected stored procedure or function returns no columns.</value>
  </data>
  <data name="NewFunctionImportDialog_ReturnTypeListAddAction" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="NewFunctionImportDialog_ReturnTypeListDeleteAction" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="NewFunctionImportDialog_ReturnTypeListNoAction" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="NewFunctionImportDialog_ReturnTypeListUpdateAction" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="NewFunctionImportDialog_ReturnTypeListViewItemChange" xml:space="preserve">
    <value>{0}-&gt;{1}</value>
  </data>
  <data name="NewFunctionImportDialog_NotSupportedColumnType" xml:space="preserve">
    <value>Not Supported</value>
  </data>
  <data name="NewAssociationDialog_CreateForeignKeysLabel" xml:space="preserve">
    <value>Add &amp;foreign key properties to the '{0}' Entity</value>
  </data>
  <data name="NewAssociationDialog_CreateForeignKeysLabel_Default" xml:space="preserve">
    <value>Add foreign key properties</value>
  </data>
  <data name="NewFunctionImportDialog_CouldNotFindStoredProcedure" xml:space="preserve">
    <value>Could not find the stored procedure or function {0}. This may be a temporary inability to read from the database or the stored procedure or function may have been deleted from the database.</value>
  </data>
  <data name="RefreshFunctionImportsDialog_Error_NoProject" xml:space="preserve">
    <value>Could not find the database project '{0}'</value>
  </data>
  <data name="RefreshFunctionImportsDialog_Error_NoReference" xml:space="preserve">
    <value>A database project reference must be specified for this model</value>
  </data>
  <data name="RefreshFunctionImportsDialog_Error_OnlyDbProject" xml:space="preserve">
    <value>Only references of type '{0}' are supported for this operation</value>
  </data>
  <data name="RefreshFunctionImportsDialog_Title" xml:space="preserve">
    <value>Refresh Views, Functions, and Function Imports for '{0}'</value>
  </data>
  <data name="RefreshFunctionImportsDialog_chkBuildAndDeploy_Text" xml:space="preserve">
    <value>&amp;Build and deploy database project '{0}' to Debug database</value>
  </data>
  <data name="FinishButton_Text" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="CancellingButton_Text" xml:space="preserve">
    <value>Cancelling...</value>
  </data>
  <data name="NewFunctionImportDialog_IsComposableTooltipText" xml:space="preserve">
    <value>Editing composable Function Imports is not supported for EDMX files with version less than or equal to {0}</value>
  </data>
  <data name="ConfirmDeleteDialog_DescriptionLabel_Text" xml:space="preserve">
    <value>Are you sure you want to delete these items?</value>
  </data>
  <data name="ConfirmDeleteDialog_Title" xml:space="preserve">
    <value>Confirm Delete</value>
  </data>
</root>
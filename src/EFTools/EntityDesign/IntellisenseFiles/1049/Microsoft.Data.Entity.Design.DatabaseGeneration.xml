<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Data.Entity.Design.DatabaseGeneration</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmConstants">
      <summary>Определяет константы, используемые классами в пространствах имен <see cref="N:Microsoft.Data.Entity.Design.DatabaseGeneration" />, <see cref="N:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities" /> и <see cref="N:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators" /> при создании базы данных из концептуальной модели.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmConstants.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmConstants" />.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmConstants.csdlInputName">
      <summary>Доступное только для чтения поле, представляющее имя входящего аргумента рабочего процесса, представляющего входящий язык определения концептуальной схемы (CSDL).</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmConstants.ddlOutputName">
      <summary>Доступное только для чтения поле, представляющее имя выходящего аргумента рабочего процесса, представляющего формируемый язык описания данных (DDL).</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmConstants.existingMslInputName">
      <summary>Доступное только для чтения поле, представляющее имя входящего аргумента рабочего процесса, представляющего входящий язык определения сопоставлений (MSL).</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmConstants.existingSsdlInputName">
      <summary>Доступное только для чтения поле, представляющее имя входящего аргумента рабочего процесса, представляющего входящий язык определения схемы хранения (SSDL), если он существует.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmConstants.mslOutputName">
      <summary>Доступное только для чтения поле, представляющее имя выходящего аргумента рабочего процесса, представляющего формируемый язык определения сопоставлений (MSL).</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmConstants.ssdlOutputName">
      <summary>Доступное только для чтения поле, представляющее имя выходящего аргумента рабочего процесса, представляющего формируемый язык определения схемы хранения (SSDL).</summary>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmExtension">
      <summary>Предоставляет вспомогательные методы для классов в пространствах имен <see cref="N:Microsoft.Data.Entity.Design.DatabaseGeneration" />, <see cref="N:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities" /> и <see cref="N:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators" />, используемые для создания и проверки коллекций <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmExtension.CreateAndValidateEdmItemCollection(System.String,System.Version)">
      <summary>Преобразует строковое представление языка определения концептуальной схемы (CSDL) в <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> и выполняет его проверку.</summary>
      <returns>Язык CSDL в виде коллекции <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" />.</returns>
      <param name="csdl">Метаданные концептуальной модели в виде строки.</param>
      <param name="targetFrameworkVersion">Целевая версия платформы Entity Framework.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmExtension.CreateAndValidateStoreItemCollection(System.String,System.Version,System.Boolean,System.Boolean)">
      <summary>Преобразует строковое представление на языке SSDL в коллекцию <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> и проверяет ее.</summary>
      <returns>SSDL в виде коллекции <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</returns>
      <param name="ssdl">SSDL в виде строки.</param>
      <param name="targetFrameworkVersion">Целевая версия платформы Entity Framework.</param>
      <param name="throwOnError">Определяет, будут ли выдаваться исключения при возникновении ошибок во время процессов создания и проверки <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />. </param>
      <param name="catchThrowNamingConflicts">Определяет, будут ли выдаваться исключения при возникновении конфликта имен в создаваемом объекте <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmExtension.CreateStoreItemCollection(System.String,System.Version,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}@)">
      <summary>Преобразует строковое представление на языке SSDL в коллекцию <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</summary>
      <returns>SSDL в виде коллекции <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</returns>
      <param name="ssdl">SSDL в виде строки.</param>
      <param name="targetFrameworkVersion">Целевая версия платформы Entity Framework.</param>
      <param name="edmErrors">Выходной параметр, содержащий список ошибок, возникших во время создания <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmExtension.GetInvalidCharsException(System.String)">
      <summary>Возвращает локализованное исключение из процесса создания базы данных в случае, если имя, указанное в языке определения схемы хранения (SSDL), содержит символы, недопустимые для базы данных-получателя.</summary>
      <returns>Локализованное исключение из процесса создания базы данных в случае, если имя, предоставленное в языке определения схемы хранения (SSDL), содержит символы, недопустимые для целевой базы данных.</returns>
      <param name="userInput">Имя объекта, содержащего недопустимые символы.</param>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag">
      <summary>Предоставляет значения для параметров, определяемых в перечислении <see cref="T:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.ParameterName" />. </summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.#ctor(System.Threading.SynchronizationContext,Microsoft.Data.Entity.Design.DatabaseGeneration.IAssemblyLoader,System.Version,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Создает новый экземпляр <see cref="T:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag" />.</summary>
      <param name="syncContext">Состояние потока пользовательского интерфейса в Visual Studio.</param>
      <param name="assemblyLoader">Загружает ссылки проекта и веб-узла.</param>
      <param name="targetVersion">Целевая версия платформы .NET Framework.</param>
      <param name="providerInvariantName">Неизменяемое имя поставщика.</param>
      <param name="providerManifestToken">Маркер манифеста поставщика.</param>
      <param name="providerConnectionString">Строка соединения поставщика.</param>
      <param name="databaseSchemaName">Имя схемы создаваемой базы данных.</param>
      <param name="databaseName">Имя создаваемой базы данных.</param>
      <param name="ddlTemplatePath">Путь, по которому будет записан формируемый язык описания данных (DDL).</param>
      <param name="edmxPath">Путь, по которому будет записан формируемый файл EDMX.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.GetParameter``1(Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.ParameterName)">
      <summary>Возвращает значение указанного параметра <see cref="T:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.ParameterName" />.</summary>
      <returns>Значение указанного параметра <see cref="T:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.ParameterName" />.</returns>
      <param name="parameterName">Имя параметра.</param>
      <typeparam name="T">Тип параметра с именем <paramref name="parameterName" />.</typeparam>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.ParameterName">
      <summary>Перечисление имен параметров, используемых классами в пространстве имен <see cref="N:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators" /> при создании базы данных из концептуальной модели.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.ParameterName.SynchronizationContext">
      <summary>Контекст <see cref="T:System.Threading.SynchronizationContext" />, который представляет состояние потока пользовательского интерфейса в Visual Studio.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.ParameterName.AssemblyLoader">
      <summary>Имя объекта-параметра <see cref="T:Microsoft.Data.Entity.Design.DatabaseGeneration.IAssemblyLoader" />, используемого для разрешения имени сборки и загрузки сборки по имени.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.ParameterName.TargetVersion">
      <summary>Целевая версия платформы Entity Framework.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.ParameterName.ProviderInvariantName">
      <summary>Неизменяемое имя поставщика.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.ParameterName.ProviderManifestToken">
      <summary>Маркер манифеста поставщика.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.ParameterName.ProviderConnectionString">
      <summary>Строка подключения поставщика.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.ParameterName.DatabaseSchemaName">
      <summary>Имя схемы создаваемой базы данных.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.ParameterName.DatabaseName">
      <summary>Имя создаваемой базы данных.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.ParameterName.DDLTemplatePath">
      <summary>Путь к текстовому шаблону, используемому при создании языка описания данных (DDL).</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.DatabaseGeneration.EdmParameterBag.ParameterName.EdmxPath">
      <summary>Путь к файлу, из которого был запущен мастер создания базы данных.</summary>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.DatabaseGeneration.IAssemblyLoader">
      <summary>Разрешает классы семейства OutputGenerators для рабочего потока.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.IAssemblyLoader.LoadAssembly(System.String)">
      <summary>Производит попытку загрузить сборку.</summary>
      <returns>Разрешенная ссылка на сборку.</returns>
      <param name="assemblyName">Имя загружаемой сборки.</param>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions">
      <summary>Предоставляет методы расширения для навигации и создания запросов к коллекциям элементов в пространстве имен <see cref="N:System.Data.Metadata.Edm" />.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetAllAssociations(System.Data.Metadata.Edm.ItemCollection)">
      <summary>Возвращает перечислимую коллекцию всех объектов <see cref="T:System.Data.Metadata.Edm.AssociationType" /> в указанной коллекции <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.</summary>
      <returns>Перечислимая коллекция всех объектов <see cref="T:System.Data.Metadata.Edm.AssociationType" /> в указанной коллекции <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.</returns>
      <param name="itemCollection">Коллекция метаданных, хранящаяся в памяти.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetAllAssociationSets(System.Data.Metadata.Edm.ItemCollection)">
      <summary>Возвращает перечислимую коллекцию всех объектов <see cref="T:System.Data.Metadata.Edm.AssociationSet" /> в указанной коллекции <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.</summary>
      <returns>Перечислимая коллекция всех объектов <see cref="T:System.Data.Metadata.Edm.AssociationSet" /> в указанной коллекции <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.</returns>
      <param name="itemCollection">Коллекция метаданных, хранящаяся в памяти.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetAllEntitySets(System.Data.Metadata.Edm.ItemCollection)">
      <summary>Возвращает перечислимую коллекцию всех объектов <see cref="T:System.Data.Metadata.Edm.EntitySet" /> в указанной коллекции <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.</summary>
      <returns>Перечислимая коллекция всех объектов <see cref="T:System.Data.Metadata.Edm.EntitySet" /> в указанной коллекции <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.</returns>
      <param name="itemCollection">Коллекция метаданных, хранящаяся в памяти.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetAllEntityTypes(System.Data.Metadata.Edm.ItemCollection)">
      <summary>Возвращает перечислимую коллекцию всех объектов <see cref="T:System.Data.Metadata.Edm.EntityType" /> в указанной коллекции <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.</summary>
      <returns>Перечислимая коллекция всех объектов <see cref="T:System.Data.Metadata.Edm.EntityType" /> в указанной коллекции <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.</returns>
      <param name="itemCollection">Коллекция метаданных, хранящаяся в памяти.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetAllReferentialConstraints(System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>Возвращает перечислимую коллекцию всех объектов <see cref="T:System.Data.Metadata.Edm.ReferentialConstraint" /> в указанной коллекции <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</summary>
      <returns>Перечислимая коллекция всех объектов <see cref="T:System.Data.Metadata.Edm.ReferentialConstraint" /> в указанной коллекции <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.</returns>
      <param name="storeItemCollection">Коллекция метаданных модели хранения, хранящаяся в памяти.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetAssociation(System.Data.Metadata.Edm.AssociationSet)">
      <summary>Возвращает объект <see cref="T:System.Data.Metadata.Edm.AssociationType" /> из указанного набора <see cref="T:System.Data.Metadata.Edm.AssociationSet" />.</summary>
      <returns>Объект <see cref="T:System.Data.Metadata.Edm.AssociationType" /> в указанном <see cref="T:System.Data.Metadata.Edm.AssociationSet" />.</returns>
      <param name="associationSet">Набор ассоциаций в концептуальной модели.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetContainingTypes(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.ItemCollection)">
      <summary>Возвращает коллекцию всех объектов <see cref="T:System.Data.Metadata.Edm.EntityType" /> из заданных <see cref="T:System.Data.Metadata.Edm.EntitySet" /> и <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.</summary>
      <returns>Коллекция всех объектов <see cref="T:System.Data.Metadata.Edm.EntityType" /> из заданных <see cref="T:System.Data.Metadata.Edm.EntitySet" /> и <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.</returns>
      <param name="set">Набор сущностей в концептуальной модели.</param>
      <param name="itemCollection">Коллекция метаданных, хранящаяся в памяти.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetDbProviderManifest(System.String,System.String)">
      <summary>Возвращает <see cref="T:System.Data.Common.DbProviderManifest" /> для поставщика, имеющего заданное неизменяемое имя и маркер манифеста.</summary>
      <returns>
        <see cref="T:System.Data.Common.DbProviderManifest" /> для поставщика, имеющего заданное неизменяемое имя и маркер манифеста.</returns>
      <param name="providerInvariantName">Неизменяемое имя поставщика.</param>
      <param name="providerManifestToken">Маркер манифеста поставщика.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetDependentEnd(System.Data.Metadata.Edm.AssociationType)">
      <summary>Возвращает зависимый конечный элемент для заданного объекта <see cref="T:System.Data.Metadata.Edm.AssociationType" />.</summary>
      <returns>Зависимый конечный элемент для заданного объекта <see cref="T:System.Data.Metadata.Edm.AssociationType" />.</returns>
      <param name="association">Ассоциация в концептуальной модели.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetDependentProperty(System.Data.Metadata.Edm.EdmProperty,System.Data.Metadata.Edm.ReferentialConstraint)">
      <summary>Возвращает свойство зависимого конечного элемента указанного справочного ограничения, соответствующее свойству на основном конечном элементе.</summary>
      <returns>Свойство зависимого конечного элемента указанного ссылочного ограничения, соответствующее свойству на основном конечном элементе.</returns>
      <param name="property">Свойство на основном конечном элементе заданного ссылочного ограничения.</param>
      <param name="refConstraint">Ссылочное ограничение в концептуальной модели.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetEnd1(System.Data.Metadata.Edm.AssociationType)">
      <summary>Возвращает первый элемент <see cref="T:System.Data.Metadata.Edm.AssociationEndMember" /> свойства <see cref="P:System.Data.Metadata.Edm.AssociationType.AssociationEndMembers" /> для заданного типа <see cref="T:System.Data.Metadata.Edm.AssociationType" />.</summary>
      <returns>Первый элемент <see cref="T:System.Data.Metadata.Edm.AssociationEndMember" /> свойства <see cref="P:System.Data.Metadata.Edm.AssociationType.AssociationEndMembers" /> для заданного типа <see cref="T:System.Data.Metadata.Edm.AssociationType" />.</returns>
      <param name="association">Ассоциация в концептуальной модели.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetEnd2(System.Data.Metadata.Edm.AssociationType)">
      <summary>Возвращает второй элемент <see cref="T:System.Data.Metadata.Edm.AssociationEndMember" /> свойства <see cref="P:System.Data.Metadata.Edm.AssociationType.AssociationEndMembers" /> для заданного типа <see cref="T:System.Data.Metadata.Edm.AssociationType" />.</summary>
      <returns>Второй элемент <see cref="T:System.Data.Metadata.Edm.AssociationEndMember" /> свойства <see cref="P:System.Data.Metadata.Edm.AssociationType.AssociationEndMembers" /> для заданного типа <see cref="T:System.Data.Metadata.Edm.AssociationType" />.</returns>
      <param name="association">Ассоциация в концептуальной модели.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetEntityContainerName(System.Data.Metadata.Edm.ItemCollection)">
      <summary>Возвращает значение атрибута Name элемента EntityContainer в заданной коллекции <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.</summary>
      <returns>Значение атрибута Name элемента EntityContainer в заданной коллекции <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.</returns>
      <param name="itemCollection">Коллекция метаданных, хранящаяся в памяти.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetEntityType(System.Data.Metadata.Edm.RelationshipEndMember)">
      <summary>Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntityType" /> для указанного объекта <see cref="T:System.Data.Metadata.Edm.RelationshipEndMember" />.</summary>
      <returns>Объект <see cref="T:System.Data.Metadata.Edm.EntityType" /> для указанного объекта <see cref="T:System.Data.Metadata.Edm.RelationshipEndMember" />.</returns>
      <param name="end">Один из конечных элементов End ассоциации.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetKeyProperties(System.Data.Metadata.Edm.AssociationEndMember)">
      <summary>Возвращает ключевые свойства типа <see cref="T:System.Data.Metadata.Edm.EntityType" />, связанного с заданным элементом <see cref="T:System.Data.Metadata.Edm.AssociationEndMember" />.</summary>
      <returns>Ключевые свойства типа <see cref="T:System.Data.Metadata.Edm.EntityType" />, связанного с заданным элементом <see cref="T:System.Data.Metadata.Edm.AssociationEndMember" />.</returns>
      <param name="end">Один конечный элемент ассоциации в концептуальной модели.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetKeyProperties(System.Data.Metadata.Edm.EntityType)">
      <summary>Возвращает ключевые свойства указанного типа <see cref="T:System.Data.Metadata.Edm.EntityType" />.</summary>
      <returns>Ключевые свойства указанного типа <see cref="T:System.Data.Metadata.Edm.EntityType" />.</returns>
      <param name="entityType">Тип сущности в концептуальной модели.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetNamespace(System.Data.Metadata.Edm.ItemCollection)">
      <summary>Возвращает имя пространства имен первого типа <see cref="T:System.Data.Metadata.Edm.StructuralType" />, найденного в заданной коллекции <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.</summary>
      <returns>Имя пространства имен первого типа <see cref="T:System.Data.Metadata.Edm.StructuralType" />, найденного в заданной коллекции <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.</returns>
      <param name="itemCollection">Коллекция метаданных, хранящаяся в памяти.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetOnDelete(System.Data.Metadata.Edm.AssociationEndMember)">
      <summary>Возвращает значение элемента OnDelete для заданного End (конечного элемента) ассоциации.</summary>
      <returns>Значение элемента OnDelete для заданного End (конечного элемента) ассоциации.</returns>
      <param name="end">Один End (конечный элемент) ассоциации в концептуальной модели.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetOtherEnd(System.Data.Metadata.Edm.AssociationType,System.Data.Metadata.Edm.AssociationEndMember)">
      <summary>Возвращает другой конечный элемент End для заданного конечного элемента End.</summary>
      <returns>Другой конечный элемент End для заданного конечного элемента Endассоциации.</returns>
      <param name="assoc">Ассоциация, обзор которой осуществляется.</param>
      <param name="end">Один конечный элемент заданной ассоциации.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetPrincipalEnd(System.Data.Metadata.Edm.AssociationType)">
      <summary>Возвращает основной конечный элемент заданной ассоциации.</summary>
      <returns>Основной конечный элемент заданной ассоциации.</returns>
      <param name="association">Ассоциация в концептуальной модели.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetRootOrSelf(System.Data.Metadata.Edm.EntityType)">
      <summary>Возвращает тип сущности в корне иерархии наследования.</summary>
      <returns>Тип сущности в корне иерархии наследования.</returns>
      <param name="entityType">Тип сущности в концептуальной модели.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetSchemaName(System.Data.Metadata.Edm.EntitySet)">
      <summary>Возвращает имя схемы для заданного набора сущностей <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</summary>
      <returns>Имя схемы для заданного набора сущностей <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</returns>
      <param name="entitySet">Набор сущностей.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetStoreGeneratedPatternValue(System.Data.Metadata.Edm.EdmMember,System.Version,System.Data.Metadata.Edm.DataSpace)">
      <summary>Возвращает значение заметки или аспекта свойства StoreGeneratedPattern в концептуальной модели или модели хранения.</summary>
      <returns>Значение аннотации или аспекта свойства StoreGeneratedPattern в концептуальной модели или модели хранения.</returns>
      <param name="property">Свойство, содержащее аспект StoreGeneratedPattern.</param>
      <param name="targetVersion">Целевая версия платформы Entity Framework.</param>
      <param name="dataSpace">Модель (концептуальная или хранения), в которой существует заданное свойство.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetStoreType(System.Data.Metadata.Edm.EdmMember,System.Data.Common.DbProviderManifest)">
      <summary>Возвращает тип хранения, соответствующий заданному объекту <see cref="T:System.Data.Metadata.Edm.EdmMember" />, исследуя заданный манифест <see cref="T:System.Data.Common.DbProviderManifest" />.</summary>
      <returns>Тип хранения, соответствующий указанному элементу <see cref="T:System.Data.Metadata.Edm.EdmMember" />.</returns>
      <param name="edmMember">Элемент языка CSDL, содержащий тип EDM, который будет преобразован в тип хранения (SSDL).</param>
      <param name="providerManifest">Используемый поставщик хранения.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.GetTableName(System.Data.Metadata.Edm.EntitySet)">
      <summary>Возвращает имя таблицы, соответствующей набору сущностей <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</summary>
      <returns>Имя таблицы, соответствующей набору сущностей <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</returns>
      <param name="entitySet">Набор сущностей.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.InferSsdlFacetsForCsdlProperty(System.Data.Metadata.Edm.EdmProperty,System.Data.Common.DbProviderManifest)">
      <summary>Выводит аспект <see cref="T:System.Data.Metadata.Edm.Facet" /> для свойства в модели хранения, основываясь на соответствующем свойстве в концептуальной модели.</summary>
      <returns>Список аспектов <see cref="T:System.Data.Metadata.Edm.Facet" /> для свойства в модели хранения, основываясь на соответствующем свойстве в концептуальной модели.</returns>
      <param name="csdlProperty">Свойство в концептуальной модели.</param>
      <param name="providerManifest">Используемый поставщик хранения.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.IsComplexProperty(System.Data.Metadata.Edm.EdmProperty)">
      <summary>Определяет, является ли тип указанного свойства сложным типом.</summary>
      <returns>Значение true, если заданное свойство является сложным типом <see cref="F:System.Data.Metadata.Edm.BuiltInTypeKind.ComplexType" />. В противном случае возвращает значение false.</returns>
      <param name="property">Свойство в концептуальной модели.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.IsDerivedType(System.Data.Metadata.Edm.EntityType)">
      <summary>Определяет, является ли указанный тип сущности производным типом.</summary>
      <returns>Имеет значение True, если заданный тип сущности является базовым типом. В противном случае имеет значение false.</returns>
      <param name="entityType">Тип сущности в концептуальной модели.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.IsJoinTable(System.Data.Metadata.Edm.EntityType,System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>Определяет, представляет ли заданный тип сущности модели хранения таблицу соединения в базе данных.</summary>
      <returns>True, если все следующие условия верны:Заданный тип сущности имеет две ассоциации, происходящие из него.Два конечных элемента для заданного типа сущности имеют кратность «многие» (*).Два других конечных элемента из двух ассоциаций, происходящих их заданного типа сущности, имеют кратность «один» (1).Число свойств для заданного типа сущности равно сумме всех ключевых свойств на конечных элементах ассоциаций.Все свойства в заданном типе сущности являются ключевыми.В противном случае используется значение False.</returns>
      <param name="entityType">Тип сущности в модели хранения.</param>
      <param name="store">Коллекция метаданных модели хранения, хранящаяся в памяти.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.IsManyToMany(System.Data.Metadata.Edm.AssociationType)">
      <summary>Определяет, является ли заданная ассоциация ассоциацией «многие ко многим» (*:*).</summary>
      <returns>Имеет значение True, если оба конечных элемента заданной ассоциации имеют кратность «многие» (*). В противном случае имеет значение false.</returns>
      <param name="assoc">Ассоциация в концептуальной модели или модели хранения.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.IsPKToPK(System.Data.Metadata.Edm.AssociationType)">
      <summary>Определяет, используются ли в конечных элементах ассоциации только первичные ключи.</summary>
      <returns>Имеет значение True если ассоциация имеет связь «один-к-одному» (1:1), «один-к-нулю-или-одному» (1:0..1) «ноль-или-один-к-нулю-или-одному» (0..1:0..1). В противном случае имеет значение false.</returns>
      <param name="assoc">Ассоциация в концептуальной модели или модели хранения.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.ToStoreType(System.Data.Metadata.Edm.EdmProperty)">
      <summary>Преобразует тип данных концептуальной модели для заданного свойства в тип данных SQL Server.</summary>
      <returns>Преобразует тип данных концептуальной модели для заданного свойства в тип данных SQL Server.</returns>
      <param name="property">Свойство в концептуальной модели.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.VisitComplexProperty(System.Data.Metadata.Edm.EdmProperty,Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.ScalarInComplexPropertyVisitorDelegate,System.String,System.Boolean)">
      <summary>Выполняет делегат <see cref="T:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.ScalarInComplexPropertyVisitorDelegate" /> для каждого скалярного свойства заданного свойства сложного типа.</summary>
      <param name="property">Свойство сложного типа.</param>
      <param name="visitorDelegate">Делегат, выполненный для каждого скалярного свойства.</param>
      <param name="delimiter">Разделитель, используемый при именовании свойств заданного сложного типа.</param>
      <param name="recursive">Задает, будет ли метод <see cref="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.VisitComplexProperty" /> вызываться для вложенных свойств сложного типа заданного сложного типа.</param>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.ScalarInComplexPropertyVisitorDelegate">
      <summary>Тип делегата, который метод <see cref="M:Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.VisitComplexProperty(System.Data.Metadata.Edm.EdmProperty,Microsoft.Data.Entity.Design.DatabaseGeneration.MetadataWorkspaceExtensions.ScalarInComplexPropertyVisitorDelegate,System.String,System.Boolean)" /> использует для разрешения определяемого пользователем контроля над тем, как скалярные свойства сложного типа в концептуальной модели именуются в формируемой модели хранения.</summary>
      <param name="namePrefix">Имя вложенного свойства CSDL в формате, объединяющем все родительские свойства CSDL.</param>
      <param name="property">Вложенное свойство CSDL, обход которого выполняется в составе сложного типа данного сложного свойства.</param>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities.CsdlToSsdlAndMslActivity">
      <summary>Действие службы Windows Workflow, создающее модель хранения и сведения о сопоставлении, основываясь на концептуальной модели.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities.CsdlToSsdlAndMslActivity.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities.CsdlToSsdlAndMslActivity" />.</summary>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities.CsdlToSsdlAndMslActivity.CsdlInput">
      <summary>Действие <see cref="T:System.Activities.InArgument`1" /> службы Windows Workflow, задающее язык CSDL, из которого создаются языки SSDL и MSL.</summary>
      <returns>Язык CSDL, из которого создаются языки SSDL и MSL.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities.CsdlToSsdlAndMslActivity.MslOutput">
      <summary>Действие <see cref="T:System.Activities.OutArgument`1" /> службы Windows Workflow, задающее язык MSL, создаваемый на основе языка CSDL из свойства <see cref="P:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities.CsdlToSsdlAndMslActivity.CsdlInput" />.</summary>
      <returns>Язык MSL, формируемый из языка CSDL из свойства <see cref="P:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities.CsdlToSsdlAndMslActivity.CsdlInput" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities.CsdlToSsdlAndMslActivity.MslOutputGeneratorType">
      <summary>Имя типа с указанием сборки, используемого для создания языка MSL из языка CSDL в свойстве <see cref="P:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities.CsdlToSsdlAndMslActivity.CsdlInput" />.</summary>
      <returns>Имя типа генератора выхода с указанием сборки, используемого для создания языка MSL из языка CSDL в свойстве <see cref="P:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities.CsdlToSsdlAndMslActivity.CsdlInput" />.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities.CsdlToSsdlAndMslActivity.SsdlOutput">
      <summary>Действие <see cref="T:System.Activities.OutArgument`1" /> службы Windows Workflow, задающее язык SSDL, создаваемый на основе языка CSDL из свойства <see cref="P:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities.CsdlToSsdlAndMslActivity.CsdlInput" />.</summary>
      <returns>Язык SSDL, формируемый из языка CSDL из свойства <see cref="P:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities.CsdlToSsdlAndMslActivity.CsdlInput" />.</returns>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.CsdlToMsl">
      <summary>Создает язык MSL, основываясь на предоставленном языке CSDL.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.CsdlToMsl.#ctor">
      <summary>Создает новый экземпляр <see cref="T:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.CsdlToMsl" />.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.CsdlToMsl.GenerateActivityOutput``1(Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.OutputGeneratorActivity,System.Activities.NativeActivityContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Создает язык MSL, основываясь на предоставленном языке CSDL.</summary>
      <returns>Код на языке MSL для типа T на основе представленного кода на языке CSDL.</returns>
      <param name="activity">Выполняющееся в данный момент действие.</param>
      <param name="context">Контекст действия, содержащий состояние рабочего процесса.</param>
      <param name="inputs">Содержит входящий язык CSDL.</param>
      <typeparam name="T">Тип выхода действия.</typeparam>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.CsdlToSsdl">
      <summary>Создает язык SSDL, основываясь на предоставленном языке CSDL.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.CsdlToSsdl.#ctor">
      <summary>Создает новый экземпляр <see cref="T:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.CsdlToSsdl" />.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.CsdlToSsdl.GenerateActivityOutput``1(Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.OutputGeneratorActivity,System.Activities.NativeActivityContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Создает язык SSDL, основываясь на предоставленном языке CSDL.</summary>
      <returns>Код на языке SSDL для типа T на основе предоставленного кода на языке CSDL.</returns>
      <param name="activity">Выполняющееся в данный момент действие.</param>
      <param name="context">Контекст действия, содержащий состояние рабочего процесса.</param>
      <param name="inputs">Содержит входящий язык CSDL.</param>
      <typeparam name="T">Тип выхода действия.</typeparam>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.IGenerateActivityOutput">
      <summary>Предоставляет методы, формирующие выходы для данного входа.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.IGenerateActivityOutput.GenerateActivityOutput``1(Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.OutputGeneratorActivity,System.Activities.NativeActivityContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Создает выход для входа, находящегося в указанном действии <see cref="T:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.OutputGeneratorActivity" />.</summary>
      <returns>Выход типа T для входа, находящегося в указанном действии <see cref="T:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.OutputGeneratorActivity" />.</returns>
      <param name="owningActivity">Действие, вызывающее этот метод.</param>
      <param name="context">Контекст действия, содержащий состояние рабочего процесса.</param>
      <param name="inputs">Вход для действия как для пары «ключ-значение».</param>
      <typeparam name="T">Тип выхода действия.</typeparam>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.OutputGeneratorActivity">
      <summary>Базовый класс для <see cref="T:Microsoft.Data.Entity.Design.DatabaseGeneration.Activities.CsdlToSsdlAndMslActivity" />.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.OutputGeneratorActivity.#ctor">
      <summary>Создает новый экземпляр <see cref="T:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.OutputGeneratorActivity" />.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.OutputGeneratorActivity.Execute(System.Activities.NativeActivityContext)">
      <summary>Создает выходные данные, передаваемые заданному контексту <see cref="T:System.Activities.NativeActivityContext" />, на основе входных данных, заданных в контексте <see cref="T:System.Activities.NativeActivityContext" />.</summary>
      <param name="context">Состояние текущего действия.</param>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.OutputGeneratorActivity.OutputGeneratorOutput">
      <summary>Задает имя типа генератора выхода с указанием сборки.</summary>
      <returns>Имя типа генератора выхода с указанием сборки.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.OutputGeneratorActivity.OutputGeneratorType">
      <summary>
        <see cref="T:System.Activities.InArgument`1" />, который задает имя типа генератора выхода с указанием сборки.</summary>
      <returns>Имя типа генератора выхода с указанием сборки.</returns>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.DatabaseGeneration.OutputGenerators.OutputGeneratorActivity.ProcessOutputGenerator``1(System.String,System.Activities.NativeActivityContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Возвращает выходные данные, формируемые генератором выходных данных, для которого задано имя типа генератора.</summary>
      <returns>Выход, производимый генератором выхода, а также заданное имя типа этого генератора.</returns>
      <param name="outputGeneratorTypeName">Имя типа генератора выхода.</param>
      <param name="context">Состояние текущего действия.</param>
      <param name="inputs">Вход для действия как для пары «ключ-значение».</param>
      <typeparam name="T">Тип выхода.</typeparam>
    </member>
  </members>
</doc>
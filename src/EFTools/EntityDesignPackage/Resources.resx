<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccName_ThumbnailView" xml:space="preserve">
    <value>Thumbnail View</value>
  </data>
  <data name="AccDesc_ThumbnailView" xml:space="preserve">
    <value>Launches the thumbnail view</value>
  </data>
  <data name="AccName_ZoomInButton" xml:space="preserve">
    <value>Zoom In</value>
  </data>
  <data name="AccDesc_ZoomInButton" xml:space="preserve">
    <value>Zooms in on the diagram</value>
  </data>
  <data name="AccName_Zoom100Button" xml:space="preserve">
    <value>Zoom 100</value>
  </data>
  <data name="AccDesc_Zoom100Button" xml:space="preserve">
    <value>Zooms the diagram to 100%</value>
  </data>
  <data name="AccName_ZoomOutButton" xml:space="preserve">
    <value>Zoom Out</value>
  </data>
  <data name="AccDesc_ZoomOutButton" xml:space="preserve">
    <value>Zooms out on the diagram</value>
  </data>
  <data name="PackageLoadFailureExceptionMessage" xml:space="preserve">
    <value>Failed to load Entity Data Model Tools Package. The result is {0}.</value>
  </data>
  <data name="Tx_Delete" xml:space="preserve">
    <value>Delete {0}</value>
  </data>
  <data name="Tx_Paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="StatusBarValidatingText" xml:space="preserve">
    <value>Validating Model…</value>
  </data>
  <data name="StatusBarValidationCompletedText" xml:space="preserve">
    <value>Validation Completed</value>
  </data>
  <data name="SelectAssociationEndCommnadText" xml:space="preserve">
    <value>Entity: {0}</value>
  </data>
  <data name="SelectAssociationPropertyCommandText" xml:space="preserve">
    <value>Property: {0}</value>
  </data>
  <data name="Tx_CreateComplexType" xml:space="preserve">
    <value>Create Complex Type</value>
  </data>
  <data name="AddComplexTypeCommand_DesignerText" xml:space="preserve">
    <value>&amp;Complex Type</value>
  </data>
  <data name="AddComplexTypeCommand_ExplorerText" xml:space="preserve">
    <value>Add New &amp;Complex Type...</value>
  </data>
  <data name="AddEnumTypeCommand_DesignerText" xml:space="preserve">
    <value>&amp;Enum Type...</value>
  </data>
  <data name="AddEnumTypeCommand_ExplorerText" xml:space="preserve">
    <value>Add New &amp;Enum Type...</value>
  </data>
  <data name="ErrorOccurredLoadingFile" xml:space="preserve">
    <value>An error occurred reading the file {0}.  Error message is {1}.</value>
  </data>
  <data name="ErrorOccurredRunningCustomTool" xml:space="preserve">
    <value>An error occurred running the custom tool on the file {0}.  Error message is {1}.</value>
  </data>
  <data name="Extensibility_ErrorOccurredDuringCallToExtension" xml:space="preserve">
    <value>An error occurred executing an ADO.Net Entity Framework Extension.  The extension's type name is {0}.  The exception message is {1}.</value>
  </data>
  <data name="EditorCaptionFormat" xml:space="preserve">
    <value> [{0}]</value>
  </data>
  <data name="Tx_IncludeRelatedEntityTypeShape" xml:space="preserve">
    <value>Include related Entity Type Shape(s)</value>
  </data>
  <data name="Tx_MoveToNewDiagram" xml:space="preserve">
    <value>Move to a new diagram</value>
    <comment>Move entity types from a diagram to another diagram.</comment>
  </data>
  <data name="Extensibility_ErrorOccurredInjectingCommand" xml:space="preserve">
    <value>An error occurred while attempting to inject the command '{0}'. There are too many existing commands.</value>
  </data>
  <data name="MoveDiagramNodesWarning" xml:space="preserve">
    <value>This will save and reload your model. Continue?</value>
  </data>
  <data name="Tx_MoveProperty" xml:space="preserve">
    <value>Move Property</value>
  </data>
  <data name="AddEntityTypeCommand_DesignerText" xml:space="preserve">
    <value>&amp;Entity...</value>
  </data>
  <data name="AddEntityTypeCommand_ExplorerText" xml:space="preserve">
    <value>Add New &amp;Entity Type...</value>
  </data>
  <data name="Tx_DeleteItems" xml:space="preserve">
    <value>Delete</value>
    <comment>Delete multiple items from the designer.</comment>
  </data>
  <data name="DeleteFromModelCommandText" xml:space="preserve">
    <value>Delete from Model</value>
    <comment>Delete element from model command text</comment>
  </data>
  <data name="RemoveFromDiagramCommandText" xml:space="preserve">
    <value>Rem&amp;ove from Diagram</value>
    <comment>Delete entity type from diagram command text</comment>
  </data>
  <data name="RemoveDiagramCommandText" xml:space="preserve">
    <value>Delete Diagram</value>
    <comment>Delete diagram command text</comment>
  </data>
  <data name="ExtensionError_SourceControlLock" xml:space="preserve">
    <value>Document '{0}' is not editable. Ensure that the document is checked out from source control and then reload.</value>
  </data>
  <data name="Error_EmptyDiagram" xml:space="preserve">
    <value>Unable to create an image of diagram '{0}' because it is empty.
Please add entities to this diagram.</value>
  </data>
</root>
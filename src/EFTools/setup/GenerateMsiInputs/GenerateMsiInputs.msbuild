<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="GenerateMsiInputs" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), BuildEFTools.cmd))\tools\EntityFramework.settings.targets" />

  <PropertyGroup>
    <PackagesInputDir Condition="'$(PackagesInputDir)' == ''">$(NuGetOutputPath)</PackagesInputDir>

    <!-- override output dir for EF5 and EF6 package restore (which will automatically append \packages to path) -->
    <PackageRestoreOutputDir>$(MsiRuntimeInputsPath)</PackageRestoreOutputDir>

    <!-- Set SolutionDir so that RestorePackages knows where to find NuGet.exe -->
    <SolutionDir>$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), BuildEFTools.cmd))</SolutionDir>
    
    <!-- Allow the source of local packages to be overridden for a frozen runtime
         If running locally $(build_branch_name) will not be set - so override if only $(FrozenRuntimeDir) is set.
         But if $(build_branch_name) is set (CI builds) require that $(FrozenRuntimeBranch) exists and is equal to $(build_branch_name). -->
    <ShouldUseFrozenRuntime Condition="'$(FrozenRuntimeDir)' != '' AND ('$(build_branch_name)' == '' OR '$(build_branch_name)' == '$(FrozenRuntimeBranch)')">True</ShouldUseFrozenRuntime>
    <ShouldUseFrozenRuntime Condition="'$(ShouldUseFrozenRuntime)' == ''">False</ShouldUseFrozenRuntime>
    <LocalPackageSourceDir Condition="'$(ShouldUseFrozenRuntime)' == 'True'">$(FrozenRuntimeDir)</LocalPackageSourceDir>
    <LocalPackageSourceDir Condition="'$(LocalPackageSourceDir)' == ''">$(PackagesInputDir)</LocalPackageSourceDir>
    <RuntimeDLLSourceDir Condition="'$(ShouldUseFrozenRuntime)' == 'True'">$(FrozenRuntimeDir)</RuntimeDLLSourceDir>
    <RuntimeDLLSourceDir Condition="'$(RuntimeDLLSourceDir)' == ''">$(AssemblyPath45)</RuntimeDLLSourceDir>

  </PropertyGroup>

  <!-- Import nuget.targets to define RestorePackages target -->
  <Import Project="$(RepositoryRoot)\.nuget\nuget.targets" />

  <!-- Import EntityFramework.targets to define EF6NuGetPackageVersion -->
  <Import Project="$(RepositoryRoot)\tools\EntityFramework.targets" />

  <Target Name="GenerateMsiInputs" DependsOnTargets="Clean;RestorePackages;RestoreLocalPackages;CopyRuntimeDLLs" >
    <ItemGroup>
      <LinesToWrite Include="Source of DLLs/packages = Frozen Runtime Dir: $(FrozenRuntimeDir)" Condition="'$(ShouldUseFrozenRuntime)' == 'True'" />
      <LinesToWrite Include="Source of DLLs/packages = Local Dir: $(AssemblyPath45)" Condition="'$(ShouldUseFrozenRuntime)' != 'True'" />
    </ItemGroup>
    <WriteLinesToFile File="$(MsiRuntimeInputsPath)\RuntimeSourceLocation.txt" Lines="@(LinesToWrite)" Overwrite="true" Encoding="Unicode" />
  </Target>

  <Target Name="Clean">
    <RemoveDir Directories="$(MsiRuntimeInputsPath)" />
  </Target>

  <Target Name="RestoreLocalPackages">
    <Message Importance="High" Text="DEBUG: EF6NuGetPackageVersion=$(EF6NuGetPackageVersion)" />

<!-- Loop over all local packages (which, on a nightly build, should include the localized ones
         but exclude the dated ones) exploding the packages -->
    <ItemGroup>
      <!-- Note: the construction of DatedLocalPackages assumes the date will be the
                 only part after "$(EF6NuGetPackageVersion)-" in the package name -->
      <DatedLocalPackages Include="$(LocalPackageSourceDir)\EntityFramework.$(EF6NuGetPackageVersion)-*.nupkg" />
      <DatedLocalPackages Include="$(LocalPackageSourceDir)\EntityFramework.*.$(EF6NuGetPackageVersion)-*.nupkg" />

      <!-- On a local build the symbols.nupkg files are in the same directory as the .nupkgs and must be excluded -->
      <LocalPackages Include="$(LocalPackageSourceDir)\EntityFramework*.nupkg"
                     Exclude="$(LocalPackageSourceDir)\EntityFramework*.symbols.nupkg;@(DatedLocalPackages)" />
    </ItemGroup>
    
    <Message Importance="High" Text="DEBUG: build_branch_name=$(build_branch_name)" />
    <Message Importance="High" Text="DEBUG: FrozenRuntimeBranch=$(FrozenRuntimeBranch)" />
    <Message Importance="High" Text="DEBUG: FrozenRuntimeDir=$(FrozenRuntimeDir)" />
    <Message Importance="High" Text="DEBUG: ShouldUseFrozenRuntime=$(ShouldUseFrozenRuntime)" />

    <Error Condition="'@(LocalPackages)' == ''" Text="LocalPackages is empty and must not be.  It should contain the list of non-dated, non-symbols EntityFramework .nupkg's from directory $(LocalPackageSourceDir)" />
    
    <!-- Restore the EF6 packages from $(LocalPackageSourceDir) -->
    <Message Importance="High"
             Text="RestoreLocalPackages: Using package input directory $(LocalPackageSourceDir)" />
    
    <MSBuild Projects="$(RepositoryRoot).nuget\NuGet.targets" Targets="RestoreLocalPackage"
             Properties="$(BuildProperties);PackageRestoreOutputDir=$(PackageRestoreOutputDir);LocalPackageId=$([System.String]::Copy('%(LocalPackages.Filename)').Replace(&quot;.$(EF6NuGetPackageVersion)&quot;,&quot;&quot;));LocalPackageSource=$(LocalPackageSourceDir);RequireNoCache=true;IncludePreRelease=true" />
             
  </Target>

  <Target Name="CopyRuntimeDLLs" >
    <ItemGroup>
      <SourceDLLs Include="$(RuntimeDLLSourceDir)\EntityFramework.dll" />
      <SourceDLLs Include="$(RuntimeDLLSourceDir)\EntityFramework.SqlServer.dll" />
      <SourceDLLs Include="$(RuntimeDLLSourceDir)\EntityFramework.SqlServerCompact.dll" />
    </ItemGroup>
    <Copy SourceFiles="@(SourceDLLs)" DestinationFolder="$(MsiRuntimeInputsNet45DllsDir)" />
  </Target>

</Project>
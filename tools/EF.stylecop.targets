<!-- This file is a stripped-down copy of StyleCop.Targets. The original is a
     component of StyleCop's MSBuild integration feature. -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Specify where tasks are implemented. -->
  <UsingTask AssemblyFile="..\packages\StyleCop.4.7.10.0\lib\StyleCop.dll" TaskName="StyleCopTask" />

  <PropertyGroup>
    <BuildDependsOn>$(BuildDependsOn);StyleCop</BuildDependsOn>
    <RebuildDependsOn>StyleCopForceFullAnalysis;$(RebuildDependsOn)</RebuildDependsOn>
  </PropertyGroup>

  <PropertyGroup>
    <StyleCopForceFullAnalysis Condition="'$(StyleCopForceFullAnalysis)' == ''">false</StyleCopForceFullAnalysis>
    <StyleCopCacheResults Condition="'$(StyleCopCacheResults)' == ''">true</StyleCopCacheResults>
    <StyleCopTreatErrorsAsWarnings Condition="'$(StyleCopTreatErrorsAsWarnings)' == ''">true</StyleCopTreatErrorsAsWarnings>
    <StyleCopEnabled Condition="'$(StyleCopEnabled)' == ''">true</StyleCopEnabled>
    <StyleCopOverrideSettingsFile Condition="'$(StyleCopOverrideSettingsFile)' == ''"> </StyleCopOverrideSettingsFile>
    <StyleCopOutputFile Condition="'$(StyleCopOutputFile)' == ''">$(IntermediateOutputPath)StyleCopViolations.xml</StyleCopOutputFile>
    <!-- Specifying 0 will cause StyleCop to use the default violation count limit.
         Specifying any positive number will cause StyleCop to use that number as the violation count limit.
         Specifying any negative number will cause StyleCop to allow any number of violations without limit. -->
    <StyleCopMaxViolationCount Condition="'$(StyleCopMaxViolationCount)' == ''">0</StyleCopMaxViolationCount>
  </PropertyGroup>

  <!-- Define target: StyleCopForceFullAnalysis -->
  <Target Name="StyleCopForceFullAnalysis">
    <CreateProperty Value="true">
      <Output TaskParameter="Value" PropertyName="StyleCopForceFullAnalysis" />
    </CreateProperty>
  </Target>

  <!-- Define target: StyleCop -->
  <Target Name="StyleCop" Condition="'$(StyleCopEnabled)' != 'false'">
    <Message Text="Forcing full StyleCop reanalysis." Condition="'$(StyleCopForceFullAnalysis)' == 'true'" Importance="Low" />

    <!-- Determine what files should be checked. Take all Compile items, but exclude those that have
         set ExcludeFromStyleCop=true or ExcludeFromSourceAnalysis=true. -->
    <CreateItem Include="@(Compile)" Condition="('%(Compile.ExcludeFromStyleCop)' != 'true') and ('%(Compile.ExcludeFromSourceAnalysis)' != 'true')">
      <Output TaskParameter="Include" ItemName="StyleCopFiles" />
    </CreateItem>

    <Message Text="Analyzing @(StyleCopFiles)" Importance="Low" />

    <!-- Show list of what files should be excluded. checked. Take all Compile items, but exclude those that have
         set ExcludeFromStyleCop=true or ExcludeFromSourceAnalysis=true. -->
    <CreateItem Include="@(Compile)" Condition="('%(Compile.ExcludeFromStyleCop)' == 'true') or ('%(Compile.ExcludeFromSourceAnalysis)' == 'true')">
      <Output TaskParameter="Include" ItemName="StyleCopExcludedFiles" />
    </CreateItem>

    <ItemGroup>
      <StyleCopFiles Remove="@(ExcludeFromStyleCop)" />
    </ItemGroup>

    <Message Text="Excluding @(StyleCopExcludedFiles)" Importance="Normal" />

    <!-- Run the StyleCop MSBuild task. -->
    <StyleCopTask
      ProjectFullPath="$(MSBuildProjectDirectory)"
      SourceFiles="@(StyleCopFiles)"
      AdditionalAddinPaths="@(StyleCopAdditionalAddinPaths)"
      ForceFullAnalysis="$(StyleCopForceFullAnalysis)"
      DefineConstants="$(DefineConstants)"
      TreatErrorsAsWarnings="$(StyleCopTreatErrorsAsWarnings)"
      CacheResults="$(StyleCopCacheResults)"
      OverrideSettingsFile="$(StyleCopOverrideSettingsFile)"
      OutputFile="$(StyleCopOutputFile)"
      MaxViolationCount="$(StyleCopMaxViolationCount)" />

    <!-- Make output files cleanable -->
    <CreateItem Include="$(StyleCopOutputFile)">
      <Output TaskParameter="Include" ItemName="FileWrites" />
    </CreateItem>

    <!-- Add the StyleCop.cache file to the list of files we've written - so they can be cleaned up on a Build Clean. -->
    <CreateItem Include="StyleCop.Cache" Condition="'$(StyleCopCacheResults)' == 'true'">
      <Output TaskParameter="Include" ItemName="FileWrites" />
    </CreateItem>
  </Target>
</Project>
